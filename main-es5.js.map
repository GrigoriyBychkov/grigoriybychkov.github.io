{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/game-info/game-info.component.ts","webpack:///src/app/components/game-info/game-info.component.html","webpack:///src/app/components/list/list.component.ts","webpack:///src/app/components/list/list.component.html","webpack:///src/app/components/user-info/user-info.component.ts","webpack:///src/app/components/user-info/user-info.component.html","webpack:///src/app/services/data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","dataService","fb","router","title","form","options","destroy$","initForm","initSubscription","getPlayersNames","group","search","undefined","filteredOptions","get","valueChanges","pipe","val","_filter","value","filterValue","toLowerCase","filter","option","includes","subscribe","data","$event","console","log","navigate","source","next","complete","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","GameInfoComponent","route","sanitizer","displayedColumns","isActive","topWinning","notSoWinning","mostAppearances","sortOption","youTubeLink","_data","date","yTitle","yLink","game","total","params","paramsId","getGameInfo","drawTable","getYouTubeLink","dataSource","name","sortData","sort","a","b","result","template","tempLink","split","bypassSecurityTrustResourceUrl","sortTable","ListComponent","players","playersGameCount","getData","forEach","ep","player","count","getDisplayedColumns","pl","Object","push","UserInfoComponent","user","userData","games","asyncData$","onData","userId","getUser","getUserInfo","score","pure","item","getTable","DataService","httpClient","competition","find","response","res","isPlayerInGame","index","reduce","sum","curr","String","playerName","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserInfoComponent } from './components/user-info/user-info.component';\nimport { GameInfoComponent } from './components/game-info/game-info.component';\nimport { ListComponent } from './components/list/list.component';\n\n\nconst routes: Routes = [\n  {path: '', component: ListComponent},\n  {path: 'user-info', component: ListComponent},\n  {path: 'user-info/:id', component: UserInfoComponent},\n  {path: 'game-info', component: ListComponent},\n  {path: 'game-info/:id', component: GameInfoComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {DataService} from './services/data.service';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {Observable, Subject} from 'rxjs';\nimport {map, startWith, takeUntil} from 'rxjs/operators';\nimport {MatOptionSelectionChange} from '@angular/material/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'poker-hustler';\n  form: FormGroup = new FormGroup({});\n  options: string[] = [];\n  filteredOptions: Observable<string[]>;\n  private destroy$ = new Subject();\n\n  constructor(\n    private dataService: DataService,\n    private fb: FormBuilder,\n    private router: Router,\n  ) {\n  }\n\n  ngOnInit() {\n    this.initForm();\n    this.initSubscription();\n    this.getPlayersNames();\n  }\n\n  private initForm() {\n    this.form = this.fb.group({\n      search: undefined\n    });\n  }\n\n  private initSubscription() {\n    this.filteredOptions = this.form.get('search').valueChanges.pipe(\n      takeUntil(this.destroy$),\n      startWith(''),\n      map(val => this._filter(val)),\n    );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  private getPlayersNames() {\n    this.dataService.getPlayersNames().subscribe(data => this.options = [...data]);\n  }\n\n  getUser($event: MatOptionSelectionChange) {\n    console.log($event);\n    this.router.navigate(['/user-info', $event.source.value]).then();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n","<div class=\"container\">\n  <mat-card>\n    <div class=\"header\">\n      <div class=\"title\" [routerLink]=\"['/']\">\n        Poker Tracker\n      </div>\n      <div class=\"icon\">\n        <mat-icon class=\"md-18\">nightlight</mat-icon>\n      </div>\n    </div>\n    <mat-card-title>Hustler Casino Live Poker Tracker</mat-card-title>\n    <mat-card-subtitle>Updated : 01/05/2022</mat-card-subtitle>\n    <div class=\"search\">\n      <form [formGroup]=\"form\" class=\"example-form\">\n        <mat-form-field class=\"search-form-field\" appearance=\"fill\">\n          <mat-label>Search Player</mat-label>\n          <input type=\"text\"\n                 placeholder=\"\"\n                 aria-label=\"Number\"\n                 matInput\n                 formControlName=\"search\"\n                 class=\"search-input\"\n                 [matAutocomplete]=\"auto\">\n          <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option (onSelectionChange)=\"getUser($event)\" *ngFor=\"let option of filteredOptions | async\"\n                        [value]=\"option\">\n              {{option}}\n            </mat-option>\n          </mat-autocomplete>\n        </mat-form-field>\n      </form>\n    </div>\n    <mat-card-content>\n      <router-outlet></router-outlet>\n    </mat-card-content>\n    <div class=\"footer\">\n      <div class=\"block\">\n        <div class=\"title\">\n          DISCLAIMER\n        </div>\n        <div class=\"text\">\n          *Data provided by live stream “cumlative winnings”\n          <br>\n          ** This website was intended for entertainment purposes and not to use as any financial indicator or tax purposes.\n          <br>\n          *** Players play off stream, wins and loss might are not be accurately reflected. This information is for on stream only.\n        </div>\n      </div>\n      <div class=\"block\">\n        <div class=\"title\">\n          Shout Out\n        </div>\n        <div class=\"text\">\n          *Shoutout to Ryan Fieldmen & Nick Vertucci for creating the stream. This website is in no way affilated with the show, just a fan site.\n        </div>\n      </div>\n      <div class=\"block\">\n        <div class=\"title\">\n          Tips & Donations\n        </div>\n        <div class=\"text\">\n          *While all this was hard effort on my parts and many man hours of data tracking and learning how to build a website from scratch. If you feel inclinde to donate, I’ve provided my wallet for donations!\n        </div>\n      </div>\n      <div class=\"crypt-info\">\n      <div class=\"item\">Bitcoin</div>\n      <div class=\"item\">|</div>\n      <div class=\"item\">Eth</div>\n    </div>\n    </div>\n\n\n  </mat-card>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ListComponent } from './components/list/list.component';\nimport { UserInfoComponent } from './components/user-info/user-info.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GameInfoComponent } from './components/game-info/game-info.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatInputModule} from '@angular/material/input';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    UserInfoComponent,\n    GameInfoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatTableModule,\n    CdkTableModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatIconModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {DataService} from '../../services/data.service';\nimport {ICompetition, IGame} from '../../interfaces/itable';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {DomSanitizer, SafeUrl} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-game-info',\n  templateUrl: './game-info.component.html',\n  styleUrls: ['./game-info.component.scss']\n})\nexport class GameInfoComponent implements OnInit {\n  displayedColumns: string[] = [];\n  dataSource: MatTableDataSource<IGame>;\n  isActive = {\n    topWinning: true,\n    notSoWinning: false,\n    mostAppearances: false\n  };\n  sortOption = 'desc';\n  youTubeLink: SafeUrl = '';\n\n  set data(value: ICompetition) {\n    this._data = value;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  private _data: ICompetition = {\n    e: undefined,\n    date: undefined,\n    yTitle: undefined,\n    yLink: undefined,\n    game: [],\n    total: undefined,\n  };\n  iframeHtml: any;\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: DataService,\n    private sanitizer: DomSanitizer\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(paramsId => {\n      this.getGameInfo(paramsId.id);\n    });\n  }\n\n  private getGameInfo(id: string) {\n    this.dataService.getGameInfo(id).subscribe((data) => {\n      console.log(data);\n      this.data = data;\n      this.drawTable();\n      this.getYouTubeLink();\n    });\n\n  }\n\n  private drawTable() {\n    this.dataSource = new MatTableDataSource<IGame>(this.data.game);\n    this.displayedColumns = ['index', 'player', 'result'];\n  }\n\n  sortTable(name: string) {\n    switch (name) {\n      case 'win':\n        this.isActive.topWinning = true;\n        this.isActive.notSoWinning = false;\n        this.sortOption = 'desc';\n        this.sortData();\n        break;\n      case 'loose':\n        this.isActive.topWinning = false;\n        this.isActive.notSoWinning = true;\n        this.sortOption = 'asc';\n        this.sortData();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private sortData() {\n    if (this.sortOption === 'asc') {\n      this.data.game.sort((a, b) => +a.result - +b.result);\n    } else if (this.sortOption === 'desc') {\n      this.data.game.sort((a, b) => +b.result - +a.result);\n    }\n    this.drawTable();\n  }\n\n  private getYouTubeLink() {\n    const template = '<iframe id=\"ytplayer\" width=\"100%\" height=\"360\" [src]=\"youTubeLink\"></iframe>';\n    const tempLink = 'https://www.youtube.com/embed/' + this.data.yLink.split('=')[1].split('&')[0] + '?autoplay=1';\n    this.youTubeLink = this.sanitizer.bypassSecurityTrustResourceUrl(tempLink);\n    console.log(this.youTubeLink);\n  }\n}\n","<div class=\"name-row\"> <div class=\"name-wrapper\"><div>{{data.e}}</div> <div>{{data.date}}</div></div> <br> {{data.yTitle}}</div>\n<div class=\"button-row\">\n  <button\n    [ngClass]=\"isActive.topWinning ? 'active' : ''\"\n    (click)=\"sortTable('win')\"\n    class=\"winning-sort\"\n    mat-button>Top Winning</button>\n  <button\n    [ngClass]=\"isActive.notSoWinning ? 'active' : ''\"\n    (click)=\"sortTable('loose')\"\n    class=\"loosing-sort\"\n    mat-button>Not So Winning</button>\n</div>\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"index\">\n    <th mat-header-cell *matHeaderCellDef>\n    </th>\n    <td class=\"td\" mat-cell *matCellDef=\"let item; let i = index\">\n      {{ i + 1 }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"player\">\n    <th mat-header-cell *matHeaderCellDef >\n    </th>\n    <td class=\"td\" mat-cell [routerLink]=\"['/user-info/', item.player]\" *matCellDef=\"let item\">\n      {{ item.player }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"result\">\n    <th mat-header-cell *matHeaderCellDef>\n    </th>\n    <td class=\"td\"\n        [ngClass]=\"item.result > 0 ? 'green' : 'red'\"\n        mat-cell *matCellDef=\"let item\">\n      {{ item.result | currency: '$':'symbol' : '3.0-0'}}\n    </td>\n  </ng-container>\n\n  <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></tr>\n  <tr cdk-row *cdkRowDef=\"let row; columns: displayedColumns;\">\n    {{row}}</tr>\n</table>\n<div *ngIf=\"youTubeLink\">\n  <iframe class=\"e2e-iframe-trusted-src\" width=\"100%\" height=\"360\" [src]=\"youTubeLink\"></iframe>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {DataService} from '../../services/data.service';\nimport {ICompetition} from '../../interfaces/itable';\nimport {Observable, Subject} from 'rxjs';\nimport {MatTableDataSource, MatTableModule} from '@angular/material/table';\n\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n  data: ICompetition[];\n  displayedColumns: string[] = [];\n  dataSource: MatTableDataSource<any>;\n  length: number;\n\n  players: any = {};\n  playersGameCount: any = {};\n\n  sortOption = 'desc';\n  isActive = {\n    topWinning: true,\n    notSoWinning: false,\n    mostAppearances: false\n  };\n\n  constructor(\n    private dataService: DataService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  private getData() {\n    this.dataService.getData().subscribe((data) => {\n      data.forEach((ep) => {\n        ep.game.forEach((game) => {\n          if (!this.players[game.player]) {\n            this.players[game.player] = {\n              result: game.result,\n              count: 1\n            };\n          } else {\n            this.players[game.player].result += game.result;\n            this.players[game.player].count += 1;\n          }\n        });\n      });\n\n      this.sortData();\n      this.data = data;\n      this.getDisplayedColumns();\n    });\n  }\n\n  private sortData() {\n    const pl = [];\n\n    for (const name of Object.keys(this.players)) {\n      pl.push({name, result: this.players[name].result, count: this.players[name].count});\n    }\n    if (this.sortOption === 'asc') {\n      pl.sort((a, b) => a.result - b.result);\n    } else if (this.sortOption === 'desc') {\n      pl.sort((a, b) => b.result - a.result);\n    } else if (this.sortOption === 'count') {\n      pl.sort((a, b) => b.count - a.count);\n    }\n\n    this.dataSource = new MatTableDataSource<any>(pl);\n  }\n\n  private getDisplayedColumns() {\n    if (this.data) {\n      this.displayedColumns = ['index', 'name', 'result'];\n    }\n  }\n\n  sortTable(name: string) {\n    switch (name) {\n      case 'win':\n        this.isActive.topWinning = true;\n        this.isActive.notSoWinning = false;\n        this.isActive.mostAppearances = false;\n        this.sortOption = 'desc';\n        this.sortData();\n        break;\n      case 'loose':\n        this.isActive.topWinning = false;\n        this.isActive.notSoWinning = true;\n        this.isActive.mostAppearances = false;\n        this.sortOption = 'asc';\n        this.sortData();\n        break;\n      case 'appearance':\n        this.isActive.topWinning = false;\n        this.isActive.notSoWinning = false;\n        this.isActive.mostAppearances = true;\n        this.sortOption = 'count';\n        this.sortData();\n        break;\n      default:\n        break;\n    }\n  }\n}\n","<div class=\"name-row\"></div>\n<div class=\"button-row\">\n  <button\n    [ngClass]=\"isActive.topWinning ? 'active' : ''\"\n    (click)=\"sortTable('win')\"\n    class=\"winning-sort\"\n    mat-button>Top Winning</button>\n  <button\n    [ngClass]=\"isActive.notSoWinning ? 'active' : ''\"\n    (click)=\"sortTable('loose')\"\n    class=\"loosing-sort\"\n    mat-button>Not So Winning</button>\n  <button\n    [ngClass]=\"isActive.mostAppearances ? 'active' : ''\"\n    (click)=\"sortTable('appearance')\"\n    class=\"appearance-sort\"\n    mat-button>Most Appearances</button>\n</div>\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"index\">\n    <th mat-header-cell *matHeaderCellDef>\n    </th>\n    <td class=\"td\" mat-cell *matCellDef=\"let item; let i = index\">\n      {{ i + 1 }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef>\n<!--      {{ 'Name'}}-->\n    </th>\n    <td class=\"td\" mat-cell *matCellDef=\"let item\">\n      {{ item.name }} ({{item.count}})\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"result\">\n    <th mat-header-cell *matHeaderCellDef>\n<!--      {{ 'Result'}}-->\n    </th>\n    <td class=\"td\" mat-cell [ngClass]=\"item.result > 0 ? 'green' : 'red'\" *matCellDef=\"let item\">\n      {{ item.result | currency: '$':'symbol' : '3.0-0' }}\n    </td>\n  </ng-container>\n\n  <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></tr>\n  <tr cdk-row *cdkRowDef=\"let row; columns: displayedColumns;\" [routerLink]=\"['/user-info/', row.name]\">\n    {{row}}\n  </tr>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {DataService} from '../../services/data.service';\nimport {BehaviorSubject} from 'rxjs';\nimport {IGame, IUserGame, IUserInfo} from '../../interfaces/itable';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'app-user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n  user: any = {};\n  userId: string;\n  userData: IUserInfo = {\n    games: undefined,\n    total: undefined\n  };\n  displayedColumns: string[] = [];\n  dataSource: MatTableDataSource<IGame>;\n  asyncData$: BehaviorSubject<any> = new BehaviorSubject('');\n  total = 0;\n  sortOption = 'desc';\n  isActive = {\n    topWinning: true,\n    notSoWinning: false,\n    mostAppearances: false\n  };\n\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: DataService,\n  ) {\n    this.asyncData$.subscribe(val => val ? this.onData(val) : '');\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(paramsId => {\n      this.userId = paramsId.id;\n      this.getUser(this.userId);\n    });\n  }\n\n  private getUser(name: string): void {\n    this.dataService.getUserInfo(name).subscribe((data) => {\n      this.asyncData$.next(data);\n    });\n  }\n\n  // private initSubscriptions() {\n  //   this.subscribtions$.add({\n  //     // this.route.params.subscribe(paramsId => {\n  //     //   this.userId = paramsId.id;\n  //     //   this.getUser(this.userId);\n  //     // })\n  //   });\n  // }\n  private onData(val: IUserInfo) {\n    this.userData = val;\n    this.total = +this.userData.total;\n    if (this.userData.games) {\n      this.sortTable('win');\n    }\n  }\n\n  private getTable(data: IUserGame[]) {\n    data.push({\n      title: 'Total',\n      score: this.total,\n    });\n    // @ts-ignore\n    this.dataSource = new MatTableDataSource<IUserGame[]>(data);\n    this.displayedColumns = ['index', 'title', 'score'];\n  }\n\n  sortTable(name: string) {\n    switch (name) {\n      case 'win':\n        this.isActive.topWinning = true;\n        this.isActive.notSoWinning = false;\n        this.sortOption = 'desc';\n        this.sortData();\n        break;\n      case 'loose':\n        this.isActive.topWinning = false;\n        this.isActive.notSoWinning = true;\n        this.sortOption = 'asc';\n        this.sortData();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private sortData() {\n    console.log('this.userData', this.userData);\n    const pure = this.userData.games.filter(item => item.title !== 'Total');\n    console.log('pure', pure);\n    if (this.sortOption === 'asc') {\n      pure.sort((a, b) => +a.score - +b.score);\n    } else if (this.sortOption === 'desc') {\n      pure.sort((a, b) => +b.score - +a.score);\n    }\n    // pure\n    console.log('this.userData.games ', this.userData.games);\n    this.getTable(pure);\n  }\n}\n","<div class=\"name-row\"> {{userId}}</div>\n\n<div class=\"button-row\">\n  <button\n    [ngClass]=\"isActive.topWinning ? 'active' : ''\"\n    (click)=\"sortTable('win')\"\n    class=\"winning-sort\"\n    mat-button>Top Winning</button>\n  <button\n    [ngClass]=\"isActive.notSoWinning ? 'active' : ''\"\n    (click)=\"sortTable('loose')\"\n    class=\"loosing-sort\"\n    mat-button>Not So Winning</button>\n</div>\n<div *ngIf=\"userData\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"index\">\n      <th mat-header-cell *matHeaderCellDef>\n      </th>\n      <td class=\"td\" mat-cell *matCellDef=\"let item; let i = index\">\n        {{ (i < userData.games.length) ? i + 1 : '' }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"title\">\n      <th mat-header-cell *matHeaderCellDef>\n      </th>\n      <td class=\"td\" mat-cell *matCellDef=\"let item\">\n        {{ item.title }}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"score\">\n      <th mat-header-cell *matHeaderCellDef>\n      </th>\n      <td class=\"td\"\n          [ngClass]=\"item.score > 0 ? 'green' : 'red'\"\n          mat-cell *matCellDef=\"let item\">\n        {{ item.score| currency: '$':'symbol' : '3.0-0' }}\n      </td>\n    </ng-container>\n\n    <tr cdk-header-row *cdkHeaderRowDef=\"displayedColumns\"></tr>\n    <tr cdk-row *cdkRowDef=\"let row; columns: displayedColumns;\" [routerLink]=\"(row.e) ? ['/game-info', row.e] : null\">\n      {{row}}</tr>\n  </table>\n\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ICompetition, IGame, IUserInfo} from '../interfaces/itable';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  getData(): Observable<ICompetition[]> {\n    return this.httpClient.get<ICompetition[]>('/assets/games.json');\n  }\n\n  getPlayersNames(): Observable<string[] | []> {\n    return this.httpClient.get<ICompetition[]>('/assets/games.json').pipe(map((data) => {\n      const players: string[] = [];\n      data.forEach((competition) => {\n        competition.game.forEach((game) => {\n          if (!players.includes(game.player)) {\n            players.push(game.player);\n          }\n        });\n      });\n      console.log('players ', players);\n      return players;\n    }));\n  }\n\n  getGameInfo(id: string): Observable<ICompetition | null> {\n    return this.httpClient.get<ICompetition[]>('/assets/games.json').pipe(map((data) => {\n      return data.find(item => item.e === id) || null;\n    }));\n  }\n\n  getUserInfo(name: string): Observable<any> {\n    const response: IUserInfo = {\n      games: undefined,\n      total: undefined\n    };\n    return this.httpClient.get<ICompetition[]>('/assets/games.json').pipe(map((data) => {\n      const res = data.filter(item => this.isPlayerInGame(item.game, name));\n      if (!res) {\n        return [];\n      }\n      response.games = [];\n      res.forEach((item, index) => {\n        response.games.push({\n          e: item.e,\n          title: item.yTitle,\n          score: +(item.game.find(val => val.player === name).result),\n        });\n      });\n      const total = response.games.reduce((sum, curr) => {\n        return sum += +curr.score;\n      }, 0);\n      response.total = String(total);\n      // console.log('!service response = ', JSON.stringify(response));\n      return response;\n    }));\n  }\n\n  isPlayerInGame(game: IGame[], playerName: string) {\n    const res = game.find(item => item.player === playerName);\n    return !!res;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}